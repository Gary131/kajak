<?php
/**
 * Test class for User.
 * Generated by PHPUnit on 2011-09-22 at 11:16:00.
 */
class UserTest extends EMongoDbTestCase
{
 public $fixtures = array(
     'users' => 'User',
 );
 /**
  * @var User
  */
 protected $object;
 /**
  * @todo Implement testRules().
  */
 public function testRules()
 {
  // Remove the following lines when you implement this test.
  $this->markTestIncomplete(
          'This test has not been implemented yet.'
  );
 }
 
 /**
  * Test get location
  */
 public function testGetLocation()
 {
  $this->object = User::model()->findByPk(new MongoId('4e5fc6aae20128417e6a0000'));
  $this->assertEquals(2,$this->object->location->count());
  $this->assertEquals(true,$this->object->getLocation('4e673c9de2012802d61d0000')->active);
 }

 /**
  * Test get Order
  */
 public function testGetOrder()
 {
  $this->object = User::model()->findByPk(new MongoId('4e5fc6aae20128417e680000'));
  $this->assertEquals(3,$this->object->order->count());
 }

 /**
  * @todo Implement testGetRoute().
  */
 public function testGetRoute()
 {
  // Remove the following lines when you implement this test.
  $this->markTestIncomplete(
          'This test has not been implemented yet.'
  );
 }

 /**
  * Test default Url
  */
 public function testGetDefaultUrl()
 {
  // Remove the following lines when you implement this test.
  $this->object = new User;
  $this->assertEquals(CHtml::normalizeUrl(array('/site/index/')),  $this->object->defaultUrl);
 }

 /**
  * Test get id (as string)
  */
 public function testGetId()
 {
  // Remove the following lines when you implement this test.
  $this->object = User::model()->findByPk(new MongoId('4e5fc6aae20128417e680000'));
  $this->assertInternalType('string',  $this->object->id);
  $this->assertEquals('4e5fc6aae20128417e680000',  $this->object->id);
 }

 /**
  * @todo Implement testSearchShop().
  */
 public function testSearchShop()
 {
  // Remove the following lines when you implement this test.
  $this->markTestIncomplete(
          'This test has not been implemented yet.'
  );
 }

 /**
  * @todo Implement testAfterSave().
  */
 public function testAfterSave()
 {
  // Remove the following lines when you implement this test.
  $this->markTestIncomplete(
          'This test has not been implemented yet.'
  );
 }

 /**
  * @todo Implement testBeforeDelete().
  */
 public function testBeforeDelete()
 {
  // Remove the following lines when you implement this test.
  $this->markTestIncomplete(
          'This test has not been implemented yet.'
  );
  
 }

 /**
  * Test get short email
  */
 public function testGetShortEmail()
 {
  $this->object = $this->users('Marcin');
  $this->assertNotEquals($this->users('Marcin')->email,  $this->object->shortEmail);
  $this->assertLessThan(count($this->users('Marcin')->email),$this->object->shortEmail);
 }

 /**
  * Test get short birhtday
  */
 public function testGetShortBirthday()
 {
  
  $this->object = $this->users('Marcin');
  $this->assertNotEquals($this->users('Marcin')->birthday,  $this->object->shortBirthday);
  $this->assertLessThan(count($this->users('Marcin')->email),$this->object->shortEmail);
 }
}

?>
