var ok, order, puts, q, step, wait;

puts = require('sys').puts;

ok = require('assert').ok;

q = require('../lib/sink').q;

wait = function(time, cb) {
  return setTimeout(cb, time);
};

order = [];

step = function(step) {
  return order.push(step);
};

q(function() {
  step(1);
  q(function() {
    return step(2);
  });
  q(function() {
    return step(3);
  });
  return q(function() {
    step(4);
    return q(function() {
      return step(5);
    });
  });
});

q(function() {
  return step(6);
});

q(wait, 5, function() {
  step(7);
  q(wait, 100, function() {
    return step(8);
  });
  return q(wait, 0, function() {
    return step(9);
  });
});

q(function() {
  q.parallel(function(p) {
    p(wait, 100, function() {
      return step(13);
    });
    p(wait, 0, function() {
      return step(11);
    });
    p(wait, 50, function() {
      return step(12);
    });
    return p(function() {
      return step(10);
    });
  });
  return q(function() {
    return step(14);
  });
});

q(function() {
  step(15);
  ok(order.join() === "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15");
  return puts("done: " + order);
});
